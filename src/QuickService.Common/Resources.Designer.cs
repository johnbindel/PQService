//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickService.Common {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickService.Common.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be initialized with its default value..
        /// </summary>
        internal static string ArgumentCannotBeDefault {
            get {
                return ResourceManager.GetString("ArgumentCannotBeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be greater than its ceiling value of {1}..
        /// </summary>
        internal static string ArgumentCannotBeGreaterThanBaseline {
            get {
                return ResourceManager.GetString("ArgumentCannotBeGreaterThanBaseline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be initialized with a negative value..
        /// </summary>
        internal static string ArgumentCannotBeNegative {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be out of range ({1} - {2})..
        /// </summary>
        internal static string ArgumentCannotBeOutOfRange {
            get {
                return ResourceManager.GetString("ArgumentCannotBeOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be initialized with a zero or negative value..
        /// </summary>
        internal static string ArgumentCannotBeZeroOrNegative {
            get {
                return ResourceManager.GetString("ArgumentCannotBeZeroOrNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} cannot be a null or empty collection..
        /// </summary>
        internal static string ArgumentCollectionCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentCollectionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified argument {0} is not in collection {1}..
        /// </summary>
        internal static string ArgumentNotInCollection {
            get {
                return ResourceManager.GetString("ArgumentNotInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The values of the specified argument {0} do not satisfy the required condition..
        /// </summary>
        internal static string ArgumentsConditionNotSatisfied {
            get {
                return ResourceManager.GetString("ArgumentsConditionNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the array {0} does not match the specified length of {1}..
        /// </summary>
        internal static string ArrayLengthNotEqual {
            get {
                return ResourceManager.GetString("ArrayLengthNotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of argument {0} must be {1}..
        /// </summary>
        internal static string InvalidArgumentValue {
            get {
                return ResourceManager.GetString("InvalidArgumentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the argument {0} provided for the enumeration {1} is invalid..
        /// </summary>
        internal static string InvalidEnumValue {
            get {
                return ResourceManager.GetString("InvalidEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified string argument {0} must not be empty..
        /// </summary>
        internal static string StringCannotBeEmpty {
            get {
                return ResourceManager.GetString("StringCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified string argument &apos;{0}&apos; must match the given Regex pattern &apos;{1}&apos;..
        /// </summary>
        internal static string StringMustMatchRegex {
            get {
                return ResourceManager.GetString("StringMustMatchRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type {0} is not compatible with {1}..
        /// </summary>
        internal static string TypeNotCompatible {
            get {
                return ResourceManager.GetString("TypeNotCompatible", resourceCulture);
            }
        }
    }
}
